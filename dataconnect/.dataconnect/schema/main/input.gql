"""
✨ `Exercise_KeyOutput` returns the primary key fields of table type `Exercise`.

It has the same format as `Exercise_Key`, but is only used as mutation return value.
"""
scalar Exercise_KeyOutput
"""
✨ `ExerciseSet_KeyOutput` returns the primary key fields of table type `ExerciseSet`.

It has the same format as `ExerciseSet_Key`, but is only used as mutation return value.
"""
scalar ExerciseSet_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ `Workout_KeyOutput` returns the primary key fields of table type `Workout`.

It has the same format as `Workout_Key`, but is only used as mutation return value.
"""
scalar Workout_KeyOutput
"""
✨ Generated data input type for table 'Exercise'. It includes all necessary fields for creating or upserting rows into table.
"""
input Exercise_Data {
  """
  ✨ Generated from Field `Exercise`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Exercise`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Exercise`.`workoutId` of type `UUID!`
  """
  workoutId: UUID
  """
  ✨ `_expr` server value variant of `workoutId` (✨ Generated from Field `Exercise`.`workoutId` of type `UUID!`)
  """
  workoutId_expr: UUID_Expr
  """
  ✨ Generated from Field `Exercise`.`workout` of type `Workout!`
  """
  workout: Workout_Key
  """
  ✨ Generated from Field `Exercise`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Exercise`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Exercise`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Exercise`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Exercise`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Exercise`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Exercise`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Exercise`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Exercise`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Exercise`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Exercise`.`youtubeLink` of type `String`
  """
  youtubeLink: String
  """
  ✨ `_expr` server value variant of `youtubeLink` (✨ Generated from Field `Exercise`.`youtubeLink` of type `String`)
  """
  youtubeLink_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Exercise'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Exercise_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Exercise_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Exercise_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Exercise_Filter!]
  """
  ✨ Generated from Field `Exercise`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Exercise`.`workoutId` of type `UUID!`
  """
  workoutId: UUID_Filter
  """
  ✨ Generated from Field `Exercise`.`workout` of type `Workout!`
  """
  workout: Workout_Filter
  """
  ✨ Generated from Field `Exercise`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Exercise`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Exercise`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Exercise`.`youtubeLink` of type `String`
  """
  youtubeLink: String_Filter
  """
  ✨ Generated from Field `Exercise`.`exerciseSets_on_exercise` of type `[ExerciseSet!]!`
  """
  exerciseSets_on_exercise: ExerciseSet_ListFilter
}
"""
✨ Generated first-row input type for table 'Exercise'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Exercise_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Exercise_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Exercise_Filter
}
"""
✨ Generated having input type for table 'Exercise'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Exercise_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Exercise_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Exercise_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Exercise_Having!]
  """
  ✨ Generated from Field `Exercise`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Exercise`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Exercise`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Exercise`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Exercise`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Exercise`.`workoutId_count` of type `Int!`
  """
  workoutId_count: Int_Filter
  """
  ✨ Generated from Field `Exercise`.`youtubeLink_count` of type `Int!`
  """
  youtubeLink_count: Int_Filter
  """
  ✨ Generated from Field `Exercise`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Exercise`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Exercise`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Exercise`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Exercise'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Exercise_Key {
  """
  ✨ Generated from Field `Exercise`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Exercise`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Exercise'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Exercise_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Exercise_Filter
}
"""
✨ Generated order input type for table 'Exercise'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Exercise_Order {
  """
  ✨ Generated from Field `Exercise`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Exercise`.`workoutId` of type `UUID!`
  """
  workoutId: OrderDirection
  """
  ✨ Generated from Field `Exercise`.`workout` of type `Workout!`
  """
  workout: Workout_Order
  """
  ✨ Generated from Field `Exercise`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Exercise`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Exercise`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
  """
  ✨ Generated from Field `Exercise`.`youtubeLink` of type `String`
  """
  youtubeLink: OrderDirection
}
"""
✨ Generated data input type for table 'ExerciseSet'. It includes all necessary fields for creating or upserting rows into table.
"""
input ExerciseSet_Data {
  """
  ✨ Generated from Field `ExerciseSet`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ExerciseSet`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `ExerciseSet`.`exerciseId` of type `UUID!`
  """
  exerciseId: UUID
  """
  ✨ `_expr` server value variant of `exerciseId` (✨ Generated from Field `ExerciseSet`.`exerciseId` of type `UUID!`)
  """
  exerciseId_expr: UUID_Expr
  """
  ✨ Generated from Field `ExerciseSet`.`exercise` of type `Exercise!`
  """
  exercise: Exercise_Key
  """
  ✨ Generated from Field `ExerciseSet`.`completed` of type `Boolean!`
  """
  completed: Boolean
  """
  ✨ `_expr` server value variant of `completed` (✨ Generated from Field `ExerciseSet`.`completed` of type `Boolean!`)
  """
  completed_expr: Boolean_Expr
  """
  ✨ Generated from Field `ExerciseSet`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `ExerciseSet`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `ExerciseSet`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `ExerciseSet`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `ExerciseSet`.`measurement` of type `String!`
  """
  measurement: String
  """
  ✨ `_expr` server value variant of `measurement` (✨ Generated from Field `ExerciseSet`.`measurement` of type `String!`)
  """
  measurement_expr: String_Expr
  """
  ✨ Generated from Field `ExerciseSet`.`reps` of type `Int!`
  """
  reps: Int
  """
  ✨ `_expr` server value variant of `reps` (✨ Generated from Field `ExerciseSet`.`reps` of type `Int!`)
  """
  reps_expr: Int_Expr
  """
  ✨ `_update` server value variant of `reps` (✨ Generated from Field `ExerciseSet`.`reps` of type `Int!`)
  """
  reps_update: [Int_Update!]
  """
  ✨ Generated from Field `ExerciseSet`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `ExerciseSet`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `ExerciseSet`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `ExerciseSet`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'ExerciseSet'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ExerciseSet_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [ExerciseSet_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: ExerciseSet_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [ExerciseSet_Filter!]
  """
  ✨ Generated from Field `ExerciseSet`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`exerciseId` of type `UUID!`
  """
  exerciseId: UUID_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`exercise` of type `Exercise!`
  """
  exercise: Exercise_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`completed` of type `Boolean!`
  """
  completed: Boolean_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`measurement` of type `String!`
  """
  measurement: String_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`reps` of type `Int!`
  """
  reps: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
}
"""
✨ Generated first-row input type for table 'ExerciseSet'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input ExerciseSet_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [ExerciseSet_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: ExerciseSet_Filter
}
"""
✨ Generated having input type for table 'ExerciseSet'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input ExerciseSet_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [ExerciseSet_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: ExerciseSet_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [ExerciseSet_Having!]
  """
  ✨ Generated from Field `ExerciseSet`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`completed_count` of type `Int!`
  """
  completed_count: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`exerciseId_count` of type `Int!`
  """
  exerciseId_count: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`measurement_count` of type `Int!`
  """
  measurement_count: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`reps_count` of type `Int!`
  """
  reps_count: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`reps_sum` of type `Int`
  """
  reps_sum: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`reps_avg` of type `Float`
  """
  reps_avg: Float_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`reps_min` of type `Int`
  """
  reps_min: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`reps_max` of type `Int`
  """
  reps_max: Int_Filter
  """
  ✨ Generated from Field `ExerciseSet`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'ExerciseSet'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input ExerciseSet_Key {
  """
  ✨ Generated from Field `ExerciseSet`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `ExerciseSet`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'ExerciseSet'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input ExerciseSet_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: ExerciseSet_Filter
}
"""
✨ Generated order input type for table 'ExerciseSet'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input ExerciseSet_Order {
  """
  ✨ Generated from Field `ExerciseSet`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `ExerciseSet`.`exerciseId` of type `UUID!`
  """
  exerciseId: OrderDirection
  """
  ✨ Generated from Field `ExerciseSet`.`exercise` of type `Exercise!`
  """
  exercise: Exercise_Order
  """
  ✨ Generated from Field `ExerciseSet`.`completed` of type `Boolean!`
  """
  completed: OrderDirection
  """
  ✨ Generated from Field `ExerciseSet`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `ExerciseSet`.`measurement` of type `String!`
  """
  measurement: OrderDirection
  """
  ✨ Generated from Field `ExerciseSet`.`reps` of type `Int!`
  """
  reps: OrderDirection
  """
  ✨ Generated from Field `ExerciseSet`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: String
  """
  ✨ `_expr` server value variant of `photoUrl` (✨ Generated from Field `User`.`photoUrl` of type `String`)
  """
  photoUrl_expr: String_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: String_Filter
  """
  ✨ Generated from Field `User`.`workouts_on_user` of type `[Workout!]!`
  """
  workouts_on_user: Workout_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`photoUrl_count` of type `Int!`
  """
  photoUrl_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: OrderDirection
}
"""
✨ Generated data input type for table 'Workout'. It includes all necessary fields for creating or upserting rows into table.
"""
input Workout_Data {
  """
  ✨ Generated from Field `Workout`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Workout`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Workout`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Workout`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Workout`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Workout`.`completed` of type `Boolean!`
  """
  completed: Boolean
  """
  ✨ `_expr` server value variant of `completed` (✨ Generated from Field `Workout`.`completed` of type `Boolean!`)
  """
  completed_expr: Boolean_Expr
  """
  ✨ Generated from Field `Workout`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Workout`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Workout`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Workout`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Workout`.`date` of type `Date!`
  """
  date: Date
  """
  ✨ `_date` server value variant of `date` (✨ Generated from Field `Workout`.`date` of type `Date!`)
  """
  date_date: Date_Relative
  """
  ✨ `_expr` server value variant of `date` (✨ Generated from Field `Workout`.`date` of type `Date!`)
  """
  date_expr: Date_Expr
  """
  ✨ `_update` server value variant of `date` (✨ Generated from Field `Workout`.`date` of type `Date!`)
  """
  date_update: [Date_Update!]
  """
  ✨ Generated from Field `Workout`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `Workout`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `Workout`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp
  """
  ✨ `_expr` server value variant of `updatedAt` (✨ Generated from Field `Workout`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `updatedAt` (✨ Generated from Field `Workout`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `updatedAt` (✨ Generated from Field `Workout`.`updatedAt` of type `Timestamp!`)
  """
  updatedAt_update: [Timestamp_Update!]
}
"""
✨ Generated filter input type for table 'Workout'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Workout_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Workout_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Workout_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Workout_Filter!]
  """
  ✨ Generated from Field `Workout`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Workout`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Workout`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Workout`.`completed` of type `Boolean!`
  """
  completed: Boolean_Filter
  """
  ✨ Generated from Field `Workout`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Workout`.`date` of type `Date!`
  """
  date: Date_Filter
  """
  ✨ Generated from Field `Workout`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `Workout`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Workout`.`exercises_on_workout` of type `[Exercise!]!`
  """
  exercises_on_workout: Exercise_ListFilter
}
"""
✨ Generated first-row input type for table 'Workout'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Workout_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Workout_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Workout_Filter
}
"""
✨ Generated having input type for table 'Workout'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Workout_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Workout_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Workout_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Workout_Having!]
  """
  ✨ Generated from Field `Workout`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Workout`.`completed_count` of type `Int!`
  """
  completed_count: Int_Filter
  """
  ✨ Generated from Field `Workout`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Workout`.`date_count` of type `Int!`
  """
  date_count: Int_Filter
  """
  ✨ Generated from Field `Workout`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Workout`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `Workout`.`updatedAt_count` of type `Int!`
  """
  updatedAt_count: Int_Filter
  """
  ✨ Generated from Field `Workout`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Workout`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Workout`.`date_min` of type `Date`
  """
  date_min: Date_Filter
  """
  ✨ Generated from Field `Workout`.`updatedAt_min` of type `Timestamp`
  """
  updatedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Workout`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Workout`.`date_max` of type `Date`
  """
  date_max: Date_Filter
  """
  ✨ Generated from Field `Workout`.`updatedAt_max` of type `Timestamp`
  """
  updatedAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Workout'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Workout_Key {
  """
  ✨ Generated from Field `Workout`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Workout`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Workout'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Workout_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Workout_Filter
}
"""
✨ Generated order input type for table 'Workout'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Workout_Order {
  """
  ✨ Generated from Field `Workout`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Workout`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Workout`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Workout`.`completed` of type `Boolean!`
  """
  completed: OrderDirection
  """
  ✨ Generated from Field `Workout`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Workout`.`date` of type `Date!`
  """
  date: OrderDirection
  """
  ✨ Generated from Field `Workout`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `Workout`.`updatedAt` of type `Timestamp!`
  """
  updatedAt: OrderDirection
}
